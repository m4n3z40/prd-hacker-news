---
import StoriesRepository from '../repositories/Stories';
import MainLayout from '../layouts/main.astro';
import Error from '../components/Error.astro';
import PostList from '../components/PostList.astro';

const { db } = Astro.locals;
const storiesRepo = new StoriesRepository(db);
const by = Astro.url.searchParams.get('user');
const domain = Astro.url.searchParams.get('site');
const q = Astro.url.searchParams.get('q');
const page = parseInt(Astro.url.searchParams.get('page') || '1', 10);
const perPage = 30;
let stories:Story[] = [];

const totalCount = await storiesRepo.countAll({ by, domain, title: q });

if (totalCount > 0) {
  stories = await storiesRepo.getAll({ by, domain, title: q, page, perPage });
}

const flashErrorVote = Astro.cookies.get('flash_error_vote')?.value;
---
<MainLayout title={`Product Hacker News | Search results for "${q}"`}>
  {flashErrorVote && <Error>{flashErrorVote}</Error>}
  <PostList
    items={stories}
    page={page}
    perPage={perPage}
    totalCount={totalCount}
    buildPaginationURL={searchParams => {
      searchParams.set('q', q);
      searchParams.set('user', by);
      searchParams.set('site', domain);
      const url = new URL('/');
      url.search = searchParams.toString();
      return url.href;
    }}
  />
</MainLayout>
