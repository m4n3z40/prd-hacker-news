---
import Database from 'better-sqlite3';
import MainLayout from '../../layouts/main.astro';
import Error from '../../components/Error.astro';
import MainStoryContainer from '../../components/MainStoryContainer.astro';
import PostSummary from '../../components/PostSummary.astro';
import CommentForm from '../../components/CommentForm.astro';
import CommentTimeline from '../../components/CommentTimeline.astro';

const db = new Database('./src/data/phn.db', { verbose: console.log });
const user = Astro.cookies.get('user')?.json();

const { id } = Astro.params;

const story = db.prepare(`
SELECT s.*, u.username AS by, COALESCE(SUM(v.weight), 0) AS score
FROM stories s
JOIN users u ON s.user_id = u.id
LEFT JOIN story_votes v ON s.id = v.story_id
WHERE s.id = ?
  `).get(id);
const comments = db.prepare(`
SELECT s.*, u.username AS by, COALESCE(SUM(v.weight), 0) AS score
FROM stories s
JOIN users u ON s.user_id = u.id
LEFT JOIN story_votes v ON s.id = v.story_id
WHERE s.parent_id = ?
GROUP BY s.id
  `).all(id);

const storiesDB = comments
  .concat([story])
  .reduce((acc, story) => {
    acc[story.id] = story;
    return acc;
  }, {});

story.kids = comments.map((comment) => comment.id);
story.descendants = comments.length;

const flashErrorVote = Astro.cookies.get('flash_error_vote')?.value;
---
<MainLayout title={`Product Hacker News | ${story.title}`}>
  {flashErrorVote && <Error>{flashErrorVote}</Error>}
  <MainStoryContainer>
    <PostSummary story={story} showText />
    {user ? <CommentForm parentID={story.id} /> : null}
    <CommentTimeline items={story.kids ?? []} getItem={id => storiesDB[id]} />
  </MainStoryContainer>
</MainLayout>
