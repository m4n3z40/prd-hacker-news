---
import MainLayout from '../../layouts/main.astro';
import Error from '../../components/Error.astro';
import MainStoryContainer from '../../components/MainStoryContainer.astro';
import PostSummary from '../../components/PostSummary.astro';
import CommentForm from '../../components/CommentForm.astro';
import CommentTimeline from '../../components/CommentTimeline.astro';

const { repositories: { stories: storiesRepo }, user } = Astro.locals;
const id = parseInt(Astro.params.id, 10);

const story = await storiesRepo.getById(id);

const comments = await storiesRepo.getDescendantsByParentId(id);

const storiesDB = comments
  .concat([story])
  .reduce((acc, story, _, allComments) => {
    story.kids = allComments.reduce((acc, comment) => {
      if (comment.parent_id === story.id) {
        acc.push(comment.id);
      }
      return acc;
    }, []);
    acc[story.id] = story;
    return acc;
  }, {});

story.descendants = comments.length;

const flashErrorVote = Astro.cookies.get('flash_error_vote')?.value;
---
<MainLayout title={`Product Hacker News | ${story.title}`}>
  {flashErrorVote && <Error>{flashErrorVote}</Error>}
  <MainStoryContainer>
    <PostSummary story={story} showText />
    {user ? <CommentForm parentID={story.id} rootID={story.id} /> : null}
    <CommentTimeline items={story.kids ?? []} getItem={id => storiesDB[id]} />
  </MainStoryContainer>
</MainLayout>
